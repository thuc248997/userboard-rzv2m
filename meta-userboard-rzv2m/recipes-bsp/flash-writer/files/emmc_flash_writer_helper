#!/bin/bash -e

RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color
SERIAL_DEVICE_INTERFACE=/dev/ttyUSB0
[ $# -ne 0 ] && SERIAL_DEVICE_INTERFACE=$1
EMMC_PARTITION=1
CMD_DELAY=1

# do_em_wb
# $1 = string
# $2 = partition number
# $3 = eMMC block address to write to
# $4 = filename
do_em_wb() {
	# Flash writer just looks for CR. It ignores LF characters.
	echo "Writting $1 ($4)"
	echo "Sending EM_WB command..."
	echo -en "EM_WB\r" > $SERIAL_DEVICE_INTERFACE
	sleep $CMD_DELAY
	echo -en "$2\r" > $SERIAL_DEVICE_INTERFACE
	sleep $CMD_DELAY
	echo -en "$3\r" > $SERIAL_DEVICE_INTERFACE
	sleep $CMD_DELAY

	# get the file size of our binary
	SIZE_DEC=$(stat -L --printf="%s" $4)
	SIZE_HEX=$(printf '%X' $SIZE_DEC)
	echo -en "$SIZE_HEX\r" > $SERIAL_DEVICE_INTERFACE
	sleep $CMD_DELAY

	echo "Sending file..."
	#cat $4 > $SERIAL_DEVICE_INTERFACE
	stat -L --printf="%s bytes\n" $4
	dd if=$4 of=$SERIAL_DEVICE_INTERFACE bs=1k status=progress
	sleep $CMD_DELAY
	echo -e "${YELLOW}EM_WB Complete!${NC}"
	echo ""
}

# do_em_e
# $1 = partition number
do_em_e() {
	echo "Sending EM_E command for partition $1 ..."
	echo -en "EM_E\r" > $SERIAL_DEVICE_INTERFACE
	sleep $CMD_DELAY
	echo -en "$1\r" > $SERIAL_DEVICE_INTERFACE
	sleep $CMD_DELAY
	echo -e "${YELLOW}EM_E Complete!${NC}"
	echo ""
}

do_em_e			${EMMC_PARTITION}
do_em_wb BL1		${EMMC_PARTITION}	000 loader_1st_128kb.bin
do_em_wb BL2_PARAM	${EMMC_PARTITION}	100 loader_2nd_param.bin
do_em_wb BL2		${EMMC_PARTITION}	101 loader_2nd.bin
do_em_wb UBOOT_PARAM	${EMMC_PARTITION}	901 u-boot_param.bin
do_em_wb UBOOT		${EMMC_PARTITION}	902 u-boot.bin
